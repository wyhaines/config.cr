{"repository_name":"config","body":"![Topos Playground CI](https://img.shields.io/github/actions/workflow/status/wyhaines/config.cr/ci.yml?branch=main&style=for-the-badge&logo=GitHub)\n[![GitHub release](https://img.shields.io/github/release/wyhaines/config.cr.svg?style=for-the-badge)](https://github.com/wyhaines/config.cr/releases)\n![GitHub commits since latest release (by SemVer)](https://img.shields.io/github/commits-since/wyhaines/config.cr/latest?style=for-the-badge)\n\n# config\n\nAn instance of `Config` provides a `Hash(String, String | Int | Bool)` that can be accessed via method calls. The method names are the keys of the hash. It also provides facilities to serialize a configuration out to a JSON or YAML file, and to read a JSON or YAML file as a configuration.\n\n## Full Documentation\n\n[https://wyhaines.github.io/config.cr/](https://wyhaines.github.io/config.cr/)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     config:\n       github: wyhaines/config.cr\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"config\"\n```\n\n\n```crystal\nconfig = Config.new\n\nconfig.verbose = true\npp config.verbose # => true\nif config.quiet?  # => false\n  puts \"be quiet\"\nelse\n  puts \"don't be quiet\" # => \"don't be quiet\"\nend\n```\n\nThe `#data` method will return the raw data hash.\n\n```crystal\npp config.data # => {\"verbose\" => true}\n```\n\nThe `Config` class can be initialized from an `IO`, or a `Path`/`String` that points to a\nfile. The file can be in either JSON or YAML format. The default format is JSON, but if\nthe file cannot be read as JSON, but can be read as YAML, then the format will change to YAML.\n\n```crystal\nconfig = Config.from(\"config.json\") # {\"verbose\" : \"true\"}\npp config.verbose                   # => \"true\"\n\nconfig = Config.from(\"config.yaml\") # {verbose : true}\npp config.verbose                   # => true\n\nconfig = Config.from(\"config.txt\") # {also_verbose : true}\npp config.also_verbose             # => true\n\n## Contributing\n\n1. Fork it (<https://github.com/wyhaines/config/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Kirk Haines](https://github.com/wyhaines) - creator and maintainer\n","program":{"html_id":"config/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"config","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"config/Config","path":"Config.html","kind":"class","full_name":"Config","name":"Config","abstract":false,"superclass":{"html_id":"config/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"config/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"config/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/config.cr","line_number":43,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L43"},{"filename":"src/format.cr","line_number":1,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/format.cr#L1"},{"filename":"src/version.cr","line_number":1,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/version.cr#L1"}],"repository_name":"config","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DATA","name":"DATA","value":"Hash(String, ConfigTypes).new","doc":"The configuration is stored within a constant.","summary":"<p>The configuration is stored within a constant.</p>"},{"id":"VERSION","name":"VERSION","value":"{{ (read_file(\"/home/runner/work/config.cr/config.cr/src/../VERSION\")).chomp }}","doc":"The current version of the shard. This is read from the VERSION file by a precompilation macro.","summary":"<p>The current version of the shard.</p>"}],"doc":"An instance of `Config` provides a `Hash(String, String | Int | Bool)` that is accessed\nvia method calls. The method names are the keys of the hash.\n\nFor example:\n\n```\nconfig = Config.new\n\nconfig.verbose = true\npp config.verbose # => true\nif config.quiet?  # => false\n  puts \"be quiet\"\nelse\n  puts \"don't be quiet\" # => \"don't be quiet\"\nend\n```\n\nThe `#data` method will return the raw data hash.\n\n```\npp config.data # => {\"verbose\" => true}\n```\n\nThe `Config` class can be initialized from an `IO`, or a `Path`/`String` that points to a\nfile. The file can be in either JSON or YAML format. The default format is JSON, but if\nthe file cannot be read as JSON, but can be read as YAML, then the format will change to YAML.\n\n```\nconfig = Config.from(\"config.json\") # {\"verbose\" : \"true\"}\npp config.verbose                   # => \"true\"\n\nconfig = Config.from(\"config.yaml\") # {verbose : true}\npp config.verbose                   # => true\n\nconfig = Config.from(\"config.txt\") # {also_verbose : true}\npp config.also_verbose             # => true\n```","summary":"<p>An instance of <code><a href=\"Config.html\">Config</a></code> provides a <code>Hash(String, String | Int | Bool)</code> that is accessed via method calls.</p>","class_methods":[{"html_id":"from(source:Hash(_,_))-class-method","name":"from","doc":"Create a new `Config` instance from a hash. Keys will be turned into `String`, and\nvalues, if they are a type other than `Bool`, `Int32`, or `String`, will be turned\ninto `String` as well.","summary":"<p>Create a new <code><a href=\"Config.html\">Config</a></code> instance from a hash.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Hash(_, _)"}],"args_string":"(source : Hash(_, _))","args_html":"(source : Hash(_, _))","location":{"filename":"src/config.cr","line_number":70,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L70"},"def":{"name":"from","args":[{"name":"source","external_name":"source","restriction":"Hash(_, _)"}],"visibility":"Public","body":"new(source)"}},{"html_id":"from(source:IO,format:Format=Format::JSON)-class-method","name":"from","doc":"Create a new `Config` instance from an `IO` object. The format of the data is assumed\nto be JSON unless otherwise specified. However, if the file can not be parsed as JSON\ndata, the IO will be rewound, and the data will be parsed as YAML.","summary":"<p>Create a new <code><a href=\"Config.html\">Config</a></code> instance from an <code>IO</code> object.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"IO"},{"name":"format","default_value":"Format::JSON","external_name":"format","restriction":"Format"}],"args_string":"(source : IO, format : Format = Format::JSON)","args_html":"(source : IO, format : <a href=\"Config/Format.html\">Format</a> = <span class=\"t\">Format</span><span class=\"t\">::</span><span class=\"t\">JSON</span>)","location":{"filename":"src/config.cr","line_number":77,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L77"},"def":{"name":"from","args":[{"name":"source","external_name":"source","restriction":"IO"},{"name":"format","default_value":"Format::JSON","external_name":"format","restriction":"Format"}],"visibility":"Public","body":"begin\n  case format\n  when Format::JSON\n    (from((::JSON.parse(source)).as_h)).tap(&.serialization_format = Format::JSON)\n  else\n    (from((::YAML.parse(source)).as_h)).tap(&.serialization_format = Format::YAML)\n  end\nrescue ex\n  (from((::YAML.parse(source.rewind)).as_h)).tap(&.serialization_format = Format::YAML)\nend"}},{"html_id":"from(source:Path)-class-method","name":"from","doc":"Create a new `Config` instance from a `Path` specifing the file to read.","summary":"<p>Create a new <code><a href=\"Config.html\">Config</a></code> instance from a <code>Path</code> specifing the file to read.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Path"}],"args_string":"(source : Path)","args_html":"(source : Path)","location":{"filename":"src/config.cr","line_number":89,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L89"},"def":{"name":"from","args":[{"name":"source","external_name":"source","restriction":"Path"}],"visibility":"Public","body":"format = source =~ (/\\.ya?ml$/) ? Format::YAML : Format::JSON\nFile.open(source) do |fh|\n  from(fh, format)\nend\n"}},{"html_id":"from(source:String)-class-method","name":"from","doc":"Create a new `Config` instance from a `String` specifing the path of the file to read.","summary":"<p>Create a new <code><a href=\"Config.html\">Config</a></code> instance from a <code>String</code> specifing the path of the file to read.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"String"}],"args_string":"(source : String)","args_html":"(source : String)","location":{"filename":"src/config.cr","line_number":95,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L95"},"def":{"name":"from","args":[{"name":"source","external_name":"source","restriction":"String"}],"visibility":"Public","body":"from(Path.new(source))"}}],"constructors":[{"html_id":"new(source:Hash(_,_))-class-method","name":"new","doc":"Instantiate a new `Config` instance from a `Hash`. Keys will be turned into `String`,\nand values other than `Bool` and `Int32` will be turned into `String`, as well.","summary":"<p>Instantiate a new <code><a href=\"Config.html\">Config</a></code> instance from a <code>Hash</code>.</p>","abstract":false,"args":[{"name":"source","external_name":"source","restriction":"Hash(_, _)"}],"args_string":"(source : Hash(_, _))","args_html":"(source : Hash(_, _))","location":{"filename":"src/config.cr","line_number":101,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L101"},"def":{"name":"new","args":[{"name":"source","external_name":"source","restriction":"Hash(_, _)"}],"visibility":"Public","body":"obj = Config.new\nsource.each do |key, value|\n  obj.data[key.to_s] = (value.as_bool? || value.as_i?) || value.to_s\nend\nobj\n"}}],"instance_methods":[{"html_id":"data-instance-method","name":"data","doc":"Return the raw config data hash.\n\n```\nconfig.data            # => {\"verbose\" => true}\npp tyoeof(config.data) # => Hash(String, Bool | Int32 | String)\n```\n","summary":"<p>Return the raw config data hash.</p>","abstract":false,"location":{"filename":"src/config.cr","line_number":63,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L63"},"def":{"name":"data","visibility":"Public","body":"DATA"}},{"html_id":"into(target:Hash(_,_))-instance-method","name":"into","doc":"Insert the data from the this `Config`s hash into the `target` hash.","summary":"<p>Insert the data from the this <code><a href=\"Config.html\">Config</a></code>s hash into the <code>target</code> hash.</p>","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"Hash(_, _)"}],"args_string":"(target : Hash(_, _))","args_html":"(target : Hash(_, _))","location":{"filename":"src/config.cr","line_number":111,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L111"},"def":{"name":"into","args":[{"name":"target","external_name":"target","restriction":"Hash(_, _)"}],"visibility":"Public","body":"target.merge!(data)"}},{"html_id":"into(target:IO)-instance-method","name":"into","doc":"Serialize the data from this `Config` instance into the `target` IO object.","summary":"<p>Serialize the data from this <code><a href=\"Config.html\">Config</a></code> instance into the <code>target</code> IO object.</p>","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"IO"}],"args_string":"(target : IO)","args_html":"(target : IO)","location":{"filename":"src/config.cr","line_number":116,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L116"},"def":{"name":"into","args":[{"name":"target","external_name":"target","restriction":"IO"}],"visibility":"Public","body":"case serialization_format\nwhen JSON\n  target.write(data.to_json)\nwhen YAML\n  target.write(data.to_yaml)\nend"}},{"html_id":"into(target:Path)-instance-method","name":"into","doc":"Serialize the data from this `Config` instance into the `target` file specified by the `Path`.","summary":"<p>Serialize the data from this <code><a href=\"Config.html\">Config</a></code> instance into the <code>target</code> file specified by the <code>Path</code>.</p>","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"Path"}],"args_string":"(target : Path)","args_html":"(target : Path)","location":{"filename":"src/config.cr","line_number":126,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L126"},"def":{"name":"into","args":[{"name":"target","external_name":"target","restriction":"Path"}],"visibility":"Public","body":"File.open(target, \"w+\") do |fh|\n  into(fh)\nend"}},{"html_id":"into(target:String)-instance-method","name":"into","doc":"Serialize the data from this `Config` instance into the `target` file specified by the `String`.","summary":"<p>Serialize the data from this <code><a href=\"Config.html\">Config</a></code> instance into the <code>target</code> file specified by the <code>String</code>.</p>","abstract":false,"args":[{"name":"target","external_name":"target","restriction":"String"}],"args_string":"(target : String)","args_html":"(target : String)","location":{"filename":"src/config.cr","line_number":131,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L131"},"def":{"name":"into","args":[{"name":"target","external_name":"target","restriction":"String"}],"visibility":"Public","body":"into(Path.new(target))"}},{"html_id":"serialization_format:Format-instance-method","name":"serialization_format","doc":"The default serialization format is `JSON`. If the config file reads from a file\nwhich cannot be read as JSON, but can be read as YAML, then the default format will\nchange to `YAML`. This property can also be set manually if one wants to specify the\nformat to use to serialize the config data.","summary":"<p>The default serialization format is <code>JSON</code>.</p>","abstract":false,"location":{"filename":"src/config.cr","line_number":54,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L54"},"def":{"name":"serialization_format","return_type":"Format","visibility":"Public","body":"@serialization_format"}},{"html_id":"serialization_format=(serialization_format:Format)-instance-method","name":"serialization_format=","doc":"The default serialization format is `JSON`. If the config file reads from a file\nwhich cannot be read as JSON, but can be read as YAML, then the default format will\nchange to `YAML`. This property can also be set manually if one wants to specify the\nformat to use to serialize the config data.","summary":"<p>The default serialization format is <code>JSON</code>.</p>","abstract":false,"args":[{"name":"serialization_format","external_name":"serialization_format","restriction":"Format"}],"args_string":"(serialization_format : Format)","args_html":"(serialization_format : <a href=\"Config/Format.html\">Format</a>)","location":{"filename":"src/config.cr","line_number":54,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L54"},"def":{"name":"serialization_format=","args":[{"name":"serialization_format","external_name":"serialization_format","restriction":"Format"}],"visibility":"Public","body":"@serialization_format = serialization_format"}}],"macros":[{"html_id":"method_missing(call)-macro","name":"method_missing","doc":"This macro writes the code for writing to or accessing the configuration hash.","summary":"<p>This macro writes the code for writing to or accessing the configuration hash.</p>","abstract":false,"args":[{"name":"call","external_name":"call","restriction":""}],"args_string":"(call)","args_html":"(call)","location":{"filename":"src/config.cr","line_number":136,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L136"},"def":{"name":"method_missing","args":[{"name":"call","external_name":"call","restriction":""}],"visibility":"Public","body":"      \n{% if call.name == \"[]\" %}\n        DATA[{{ call.args[0].id }}]\n      {% else %}{% if call.name == \"[]?\" %}\n        DATA[{{ call.args[0].id }}]?\n      {% else %}{% if call.name == \"[]=\" %}\n        DATA[{{ call.args[0].id }}] = {{ call.args[1].id }}\n      {% else %}{% if call.name =~ (/=/) %}\n        DATA[{{ call.name[0..-2].stringify }}] = {{ call.args[0] }}\n      {% else %}{% if call.name =~ (/\\?$/) %}\n        DATA[{{ call.name[0..-2].stringify }}]?\n      {% else %}\n        DATA[{{ call.name.stringify }}]\n      {% end %}{% end %}{% end %}{% end %}{% end %}\n\n    \n"}}],"types":[{"html_id":"config/Config/ConfigTypes","path":"Config/ConfigTypes.html","kind":"alias","full_name":"Config::ConfigTypes","name":"ConfigTypes","abstract":false,"locations":[{"filename":"src/config.cr","line_number":45,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/config.cr#L45"}],"repository_name":"config","program":false,"enum":false,"alias":true,"aliased":"(Bool | Int32 | String)","aliased_html":"Bool | Int32 | String","const":false,"namespace":{"html_id":"config/Config","kind":"class","full_name":"Config","name":"Config"},"doc":"The Config hash will accept values of String, Int32, or Bool.","summary":"<p>The Config hash will accept values of String, Int32, or Bool.</p>"},{"html_id":"config/Config/Format","path":"Config/Format.html","kind":"enum","full_name":"Config::Format","name":"Format","abstract":false,"ancestors":[{"html_id":"config/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"config/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"config/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"config/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/format.cr","line_number":2,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/format.cr#L2"}],"repository_name":"config","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"JSON","name":"JSON","value":"0"},{"id":"YAML","name":"YAML","value":"1"}],"namespace":{"html_id":"config/Config","kind":"class","full_name":"Config","name":"Config"},"instance_methods":[{"html_id":"json?-instance-method","name":"json?","abstract":false,"location":{"filename":"src/format.cr","line_number":3,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/format.cr#L3"},"def":{"name":"json?","visibility":"Public","body":"self == JSON"}},{"html_id":"yaml?-instance-method","name":"yaml?","abstract":false,"location":{"filename":"src/format.cr","line_number":4,"url":"https://github.com/wyhaines/config.cr/blob/0f2b4f5683d6a146d23cc84a47c6a4ccd75a715e/src/format.cr#L4"},"def":{"name":"yaml?","visibility":"Public","body":"self == YAML"}}]}]}]}}